import{_ as n,V as s,W as a,$ as e}from"./framework-b9c3f338.js";const p={},t=e(`<h1 id="_1-mysql基础篇" tabindex="-1"><a class="header-anchor" href="#_1-mysql基础篇" aria-hidden="true">#</a> 1. MySQL基础篇</h1><h2 id="_01-mysql" tabindex="-1"><a class="header-anchor" href="#_01-mysql" aria-hidden="true">#</a> 01 MySQL</h2><h3 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> （1）概念</h3><ul><li>数据库DB：存储数据的仓库</li><li>数据库管理系统DBMS：操作和管理数据库的软件</li><li>SQL：结构化查询语言，操作关系型数据库的编程语言，定义了一套操作 关系型数据库统一标准</li><li>关系型数据库RDBMS：建立在关系模型基础上，由多张相互连接的二维表组成的数据库。关系模型表明了数据库中所存储的数据之间的联系（一对一、一对多、多对多）</li></ul><h3 id="_2-操作" tabindex="-1"><a class="header-anchor" href="#_2-操作" aria-hidden="true">#</a> （2）操作</h3><p>MYSQL启动和关闭：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>net start mysql80
net stop mysql80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>MYSQL连接数据库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#[ ]可选（默认127.0.0.1:3306），用户名：root，p：用户密码</span>
mysql <span class="token punctuation">[</span>-h IP<span class="token punctuation">]</span> <span class="token punctuation">[</span>-P 端口号<span class="token punctuation">]</span> <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_02-sql" tabindex="-1"><a class="header-anchor" href="#_02-sql" aria-hidden="true">#</a> 02 SQL</h2><table><thead><tr><th style="text-align:center;">分类</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">DDL</td><td style="text-align:center;">数据定义语言，定义数据库对象（数据库，表，字段）</td></tr><tr><td style="text-align:center;">DML</td><td style="text-align:center;">数据操作语言，对数据库表中数据进行增删改</td></tr><tr><td style="text-align:center;">DQL</td><td style="text-align:center;">数据查询语言，查询表中记录</td></tr><tr><td style="text-align:center;">DCL</td><td style="text-align:center;">数据控制语言，创建数据库用户、控制数据库访问权限</td></tr></tbody></table><h3 id="_1-通用语法" tabindex="-1"><a class="header-anchor" href="#_1-通用语法" aria-hidden="true">#</a> （1）通用语法</h3><ul><li>SQL语句可以单行或多行书写，以分号结尾</li><li>SQL语句可以使用空格/缩进来增强语句的可读性</li><li>MySQL数据库的SQL语句不区分大小写，关键字建议使用大写</li><li>注释： <ul><li>单行注释：-- 注释内容 或 # 注释内容</li><li>多行注释：/* 注释内容 */</li></ul></li></ul><h3 id="_2-ddl" tabindex="-1"><a class="header-anchor" href="#_2-ddl" aria-hidden="true">#</a> （2）DDL</h3><h4 id="【1】数据库操作" tabindex="-1"><a class="header-anchor" href="#【1】数据库操作" aria-hidden="true">#</a> 【1】数据库操作</h4><ul><li>查询所有数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询当前数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 同一个数据库服务器中，不能创建两个同名数据库，否则报错</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">]</span> 数据库名 <span class="token punctuation">[</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> 字符集 <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token keyword">COLLATE</span> 排序规则 <span class="token punctuation">]</span> <span class="token punctuation">;</span>
<span class="token comment">#eg1:</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> study1<span class="token punctuation">;</span>
<span class="token comment">#eg2: 指定字符集</span>
<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span>  study <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 删除不存在的数据库会报错，加if exists先判断是否存再决定是否执行删除</span>
<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">[</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">]</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切换数据库</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> 数据库名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="【2】表操作" tabindex="-1"><a class="header-anchor" href="#【2】表操作" aria-hidden="true">#</a> 【2】表操作</h4><h5 id="_1-查询创建" tabindex="-1"><a class="header-anchor" href="#_1-查询创建" aria-hidden="true">#</a> 1）查询创建</h5><ul><li>查询当前数据库所有表</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 前提：进入某个数据库，use xx;</span>
<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看指定表结构</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DESC</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询指定表的建表语句</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建表结构</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 表名<span class="token punctuation">(</span>
		字段<span class="token number">1</span> 字段<span class="token number">1</span>类型 <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段<span class="token number">1</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
   	 	字段<span class="token number">2</span> 字段<span class="token number">2</span>类型 <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段<span class="token number">2</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
    	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    字段n 字段n类型 <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 字段n注释<span class="token punctuation">]</span>
<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 表注释<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-数据类型" tabindex="-1"><a class="header-anchor" href="#_2-数据类型" aria-hidden="true">#</a> 2）数据类型</h5><ul><li><p>数值类型：TINYINT，INT，FLOAT，DOUBLE，DECIMAL等</p></li><li><p>字符串类型：CHAR，VARCHAR，LONGTEXT,BLOB等</p><ul><li>CHAR与VARCHAR：都需要指定长度，CHAR是定长字符串,效率较高；VARCHAR是变长字符串</li></ul></li><li><p>日期时间类型：DATE，TIME，YEAR，DATETIME，TIMESTAMP</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
    workno <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;员工工号&#39;</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;员工姓名&#39;</span><span class="token punctuation">,</span>
    gender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>
    age <span class="token keyword">TINYINT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
    idcard <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;身份证&#39;</span><span class="token punctuation">,</span>
    entrydate <span class="token keyword">DATA</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;入职时间&#39;</span>
<span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;员工表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-修改" tabindex="-1"><a class="header-anchor" href="#_3-修改" aria-hidden="true">#</a> 3）修改</h5><ul><li>添加字段</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 字段名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span> <span class="token punctuation">[</span>约束<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment"># eg:</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">add</span> nickname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改数据类型</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 新数据类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改字段名和数据类型</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 字段名 新字段名 类型<span class="token punctuation">(</span>长度<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span> <span class="token punctuation">[</span>约束<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment"># eg:</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp change nickname username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">comment</span> <span class="token string">&#39;昵称&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除字段</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 字段名<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改表名</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> 新表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_4-删除" tabindex="-1"><a class="header-anchor" href="#_4-删除" aria-hidden="true">#</a> 4）删除</h5><ul><li>删除表</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 同数据库，删除后表中数据全部删除</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>清空表</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-dml" tabindex="-1"><a class="header-anchor" href="#_3-dml" aria-hidden="true">#</a> （3）DML</h3><h4 id="【1】添加数据-insert" tabindex="-1"><a class="header-anchor" href="#【1】添加数据-insert" aria-hidden="true">#</a> 【1】添加数据（INSERT）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token number">1.</span> 指定添加的字段
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">2.</span> 全部字段添加数据
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>:
<span class="token number">3.</span> 批量添加数据
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>字段名<span class="token number">1</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 注意：字段顺序与值一一对应，字符串和日期类型数据包含在&#39;&#39;中，数据大小在字段规定范围</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【2】修改数据-update" tabindex="-1"><a class="header-anchor" href="#【2】修改数据-update" aria-hidden="true">#</a> 【2】修改数据（UPDATE）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 字段名<span class="token number">1</span> <span class="token operator">=</span> 值<span class="token number">1</span><span class="token punctuation">,</span> 字段名<span class="token number">2</span> <span class="token operator">=</span> 值<span class="token number">2</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>{ <span class="token keyword">WHERE</span> 条件}<span class="token punctuation">;</span>
<span class="token comment"># eg:</span>
<span class="token keyword">update</span> emp <span class="token keyword">set</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">update</span> emp <span class="token keyword">set</span> entrydate <span class="token operator">=</span> <span class="token string">&#39;2022-1-1&#39;</span><span class="token punctuation">;</span> <span class="token comment"># 全局配置</span>
<span class="token comment"># 注意：条件可有可无，可无即修改整张表所有数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【3】删除数据-delete" tabindex="-1"><a class="header-anchor" href="#【3】删除数据-delete" aria-hidden="true">#</a> 【3】删除数据（DELETE）</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 {<span class="token keyword">WHERE</span> 条件}<span class="token punctuation">;</span>
<span class="token comment">/*
注意： 条件可有可无，可无即删除整张表的所有数据
			不能删除某一字段的值，可UPDATE
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-dql" tabindex="-1"><a class="header-anchor" href="#_4-dql" aria-hidden="true">#</a> （4）DQL</h3><h4 id="【1】基本语法" tabindex="-1"><a class="header-anchor" href="#【1】基本语法" aria-hidden="true">#</a> 【1】基本语法</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表
<span class="token keyword">FROM</span> 表名
<span class="token keyword">WHERE</span> 条件列表
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组字段列表
<span class="token keyword">HAVING</span> 分组后条件列表
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序字段列表
<span class="token keyword">LIMIT</span> 分页参数<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【2】基本查询" tabindex="-1"><a class="header-anchor" href="#【2】基本查询" aria-hidden="true">#</a> 【2】基本查询</h4><ul><li>查询多个字段</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段<span class="token number">1</span><span class="token punctuation">,</span> 字段<span class="token number">2</span><span class="token punctuation">,</span> 字段<span class="token number">3</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名 <span class="token punctuation">;</span> <span class="token comment"># 查询所有字段</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字段设置别名</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段<span class="token number">1</span> <span class="token punctuation">[</span> <span class="token keyword">AS</span> 别名<span class="token number">1</span> <span class="token punctuation">]</span> <span class="token punctuation">,</span> 字段<span class="token number">2</span> <span class="token punctuation">[</span> <span class="token keyword">AS</span> 别名<span class="token number">2</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> 字段<span class="token number">1</span> <span class="token punctuation">[</span> 别名<span class="token number">1</span> <span class="token punctuation">]</span> <span class="token punctuation">,</span> 字段<span class="token number">2</span> <span class="token punctuation">[</span> 别名<span class="token number">2</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>去除重复记录</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 字段列表 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="【3】条件查询" tabindex="-1"><a class="header-anchor" href="#【3】条件查询" aria-hidden="true">#</a> 【3】条件查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件列表 <span class="token punctuation">;</span>
<span class="token comment"># 条件：</span>
<span class="token operator">&gt;</span> 	<span class="token operator">&gt;=</span> 	<span class="token operator">&lt;</span>	 <span class="token operator">&lt;=</span>	 <span class="token operator">=</span>	 <span class="token operator">&lt;&gt;</span><span class="token punctuation">[</span>同<span class="token operator">!=</span><span class="token punctuation">]</span> 
<span class="token operator">BETWEEN</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">AND</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">[</span>含最小最大值<span class="token punctuation">]</span> 
<span class="token operator">IN</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> 
<span class="token operator">LIKE</span> 占位符 <span class="token punctuation">[</span>模糊匹配，_匹配单个字符，<span class="token operator">%</span>匹配任意个字符<span class="token punctuation">]</span>
<span class="token operator">IS</span> <span class="token boolean">NULL</span>  <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>
<span class="token operator">AND</span><span class="token punctuation">[</span>同<span class="token operator">&amp;&amp;</span><span class="token punctuation">]</span> <span class="token operator">OR</span><span class="token punctuation">[</span>同<span class="token operator">||</span><span class="token punctuation">]</span> <span class="token operator">NOT</span><span class="token punctuation">[</span>同<span class="token operator">!</span><span class="token punctuation">]</span>

<span class="token comment"># eg:</span>
<span class="token comment">#查询姓名为两个字的员工信息 _ %</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;__&#39;</span><span class="token punctuation">;</span>
<span class="token comment">#查询身份证号最后一位是X的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> idcard <span class="token operator">like</span> <span class="token string">&#39;%X&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> idcard <span class="token operator">like</span> <span class="token string">&#39;_________________X&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【4】聚合函数" tabindex="-1"><a class="header-anchor" href="#【4】聚合函数" aria-hidden="true">#</a> 【4】聚合函数</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 聚合函数<span class="token punctuation">(</span>字段名<span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token comment"># 聚合函数（NULL值不参与运算）</span>
count max min avg sum
<span class="token comment"># eg:</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span> <span class="token comment">#count(*)，count(1)与count(字段)比较</span>
<span class="token comment"># TODO：聚合函数的值只可与分组字段放在一起查询？</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【5】分组查询" tabindex="-1"><a class="header-anchor" href="#【5】分组查询" aria-hidden="true">#</a> 【5】分组查询</h4><ul><li>语法</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span> <span class="token keyword">WHERE</span> 条件 <span class="token punctuation">]</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组字段名 <span class="token punctuation">[</span> <span class="token keyword">HAVING</span> 分组后过滤条件 <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment"># eg:</span>
<span class="token comment">#查询年龄小于45的员工 , 并根据工作地址分组 , 获取员工数量大于等于3的工作地</span>
<span class="token keyword">select</span> address<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> address_account  <span class="token keyword">from</span> emp <span class="token keyword">where</span> age <span class="token operator">&lt;</span> <span class="token number">45</span> <span class="token keyword">group</span> <span class="token keyword">by</span> address <span class="token keyword">having</span> address_account <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">#统计各个工作地址上班的男性及女性员工的数量</span>
<span class="token keyword">select</span> address<span class="token punctuation">,</span> gender<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token string">&#39;数量&#39;</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> address<span class="token punctuation">,</span> gender<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>where与having区别 <ul><li>执行时机：where在分组前过滤，having在分组后过滤</li><li>判断条件：where不能对聚合函数进行判断，having可以</li></ul></li><li>注意事项 <ul><li>分组的查询字段为分组字段与聚合函数，其他字段无意义</li><li>执行顺序：where，group，having</li><li>支持多段分组：<code>group by columnA, columnB</code></li></ul></li></ul><h4 id="【6】排序查询" tabindex="-1"><a class="header-anchor" href="#【6】排序查询" aria-hidden="true">#</a> 【6】排序查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 字段<span class="token number">1</span> 排序方式<span class="token number">1</span> <span class="token punctuation">,</span> 字段<span class="token number">2</span> 排序方式<span class="token number">2</span> <span class="token punctuation">;</span>
<span class="token comment"># 排序方式</span>
<span class="token keyword">ASC</span>: 升序（默认，可不写） <span class="token keyword">DESC</span>: 降序
多字段排序，第一个字段值相等才按第二个字段排序
<span class="token comment"># eg:</span>
<span class="token comment">#根据年龄对公司的员工进行升序排序 , 年龄相同 , 再按照入职时间进行降序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token keyword">asc</span><span class="token punctuation">,</span> entrydate <span class="token keyword">desc</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【7】分页查询" tabindex="-1"><a class="header-anchor" href="#【7】分页查询" aria-hidden="true">#</a> 【7】分页查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">LIMIT</span> 起始索引<span class="token punctuation">,</span> 查询记录数 <span class="token punctuation">;</span>
<span class="token comment">/*
	注意：起始索引 = （查询页码 - 1） * 每页记录数;
			  查询第一页：起始索引可忽略，limit x;
*/</span>
<span class="token comment"># eg:</span>
<span class="token comment"># 查询第一页，每页10条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment"># 查询第二页，每页10条记录</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【8】执行顺序" tabindex="-1"><a class="header-anchor" href="#【8】执行顺序" aria-hidden="true">#</a> 【8】执行顺序</h4><table><thead><tr><th>编写顺序</th><th>执行顺序</th></tr></thead><tbody><tr><td>SELECT 字段列表<br>FROM 表名<br>WHERE 条件列表<br>GROUP BY 分组字段列表<br>HAVING 分组后条件列表<br>ORDER BY 排序字段列表<br>LIMIT 分页参数;</td><td>FROM 表名<br>WHERE 条件列表<br>GROUP BY 分组字段列表<br>HAVING 分组后条件列表<br>SELECT 字段列表<br>ORDER BY 排序字段列表<br>LIMIT 分页参数</td></tr></tbody></table><h3 id="_5-dcl" tabindex="-1"><a class="header-anchor" href="#_5-dcl" aria-hidden="true">#</a> （5）DCL</h3><h4 id="【1】管理用户" tabindex="-1"><a class="header-anchor" href="#【1】管理用户" aria-hidden="true">#</a> 【1】管理用户</h4><ul><li>查询用户</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> mysql<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建用户</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 主机号是代表当前用户访问的主机，</span>
<span class="token comment"># host和user标识唯一用户</span>
<span class="token comment"># 主机名可以使用%通配，可表示通过任一主机使用该用户可访问数据库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改用户</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span> IDENTIFIED <span class="token keyword">WITH</span> mysql_native_password <span class="token keyword">BY</span> <span class="token string">&#39;新密码&#39;</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除用户</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="【2】权限控制" tabindex="-1"><a class="header-anchor" href="#【2】权限控制" aria-hidden="true">#</a> 【2】权限控制</h4><ul><li><p>权限参数</p><ul><li>ALL SELECT INSERT UPDATE DELETE ALTER DROP CREATE等</li></ul></li><li><p>查询权限</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>授权权限</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> 权限列表 <span class="token keyword">ON</span> 数据库名<span class="token punctuation">.</span>表名 <span class="token keyword">TO</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span><span class="token punctuation">;</span>
<span class="token comment">/*
	注意：
		多个权限之间，使用逗号分隔；授权时，数据库名和表名可用*进行通配代表所有
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>撤销权限</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">REVOKE</span> 权限列表 <span class="token keyword">ON</span> 数据库名<span class="token punctuation">.</span>表名 <span class="token keyword">FROM</span> <span class="token string">&#39;用户名&#39;</span><span class="token variable">@&#39;主机名&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_03-函数" tabindex="-1"><a class="header-anchor" href="#_03-函数" aria-hidden="true">#</a> 03 函数</h2><h3 id="_1-字符串函数" tabindex="-1"><a class="header-anchor" href="#_1-字符串函数" aria-hidden="true">#</a> （1）字符串函数</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>CONCAT<span class="token punctuation">(</span>S1<span class="token punctuation">,</span>S2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Sn<span class="token punctuation">)</span> <span class="token comment">--- 字符串拼接</span>
LOWER<span class="token punctuation">(</span>str<span class="token punctuation">)</span> 	UPPER<span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token comment">---大小写</span>
LPAD<span class="token punctuation">(</span>str<span class="token punctuation">,</span>n<span class="token punctuation">,</span>pad<span class="token punctuation">)</span> RPAD<span class="token punctuation">(</span>str<span class="token punctuation">,</span>n<span class="token punctuation">,</span>pad<span class="token punctuation">)</span><span class="token comment">---左/右填充，用字符串pad对str的左边进行填充，达到n个字符串长度</span>
TRIM<span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">---去掉字符串头部和尾部的空格</span>
SUBSTRING<span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token keyword">start</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span> <span class="token comment">---返回从字符串str从start位置起的len个长度的字符串</span>
<span class="token comment"># eg:</span>
<span class="token keyword">update</span> emp <span class="token keyword">set</span> workno <span class="token operator">=</span> lpad<span class="token punctuation">(</span>workno<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 不足5位数的全部在前面补0</span>
<span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39; MySQL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 拼接</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数值函数" tabindex="-1"><a class="header-anchor" href="#_2-数值函数" aria-hidden="true">#</a> （2）数值函数</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>CEIL<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">---向上取整</span>
FLOOR<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">---向下取整</span>
<span class="token function">MOD</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment">---返回x/y的模</span>
RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">---返回0~1内的随机数</span>
<span class="token function">ROUND</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment">---求参数x的四舍五入的值，保留y位小数</span>
<span class="token comment"># eg随机生成6位验证码：</span>
<span class="token keyword">select</span> lpad<span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000000</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-日期函数" tabindex="-1"><a class="header-anchor" href="#_3-日期函数" aria-hidden="true">#</a> （3）日期函数</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">---当前日期	CURTIME() ---当前时间	NOW()---返回当前日期和时间</span>
<span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">)</span><span class="token comment">--- 获取指定date的年份	MONTH(date)--- 获取指定date的月份</span>
<span class="token keyword">DAY</span><span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">)</span><span class="token comment">--- 获取指定date的日期	</span>
DATE_ADD<span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> exprtype<span class="token punctuation">)</span><span class="token comment">---一个日期/时间值加上一个时间间隔expr后的时间值</span>
DATEDIFF<span class="token punctuation">(</span>date1<span class="token punctuation">,</span>date2<span class="token punctuation">)</span><span class="token comment">---返回起始时间date1和结束时间date2之间的天数</span>
<span class="token comment"># eg:</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">70</span> <span class="token keyword">YEAR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-流程函数" tabindex="-1"><a class="header-anchor" href="#_4-流程函数" aria-hidden="true">#</a> （4）流程函数</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 可用于条件筛选</span>
<span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token punctuation">,</span> t <span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token comment">---如果value为true，则返回t，否则返回f</span>
IFNULL<span class="token punctuation">(</span>value1 <span class="token punctuation">,</span> value2<span class="token punctuation">)</span><span class="token comment">---如果value1不为空，返回value1，否则返回value2</span>

<span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> <span class="token punctuation">[</span> val1 <span class="token punctuation">]</span> <span class="token keyword">THEN</span> <span class="token punctuation">[</span>res1<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">ELSE</span> <span class="token punctuation">[</span> <span class="token keyword">default</span> <span class="token punctuation">]</span> <span class="token keyword">END</span>
如果val1为<span class="token boolean">true</span>，返回res1，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 否则返回<span class="token keyword">default</span>默认值

<span class="token keyword">CASE</span> <span class="token punctuation">[</span> expr <span class="token punctuation">]</span> <span class="token keyword">WHEN</span> <span class="token punctuation">[</span> val1 <span class="token punctuation">]</span> <span class="token keyword">THEN</span><span class="token punctuation">[</span>res1<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">ELSE</span> <span class="token punctuation">[</span> <span class="token keyword">default</span> <span class="token punctuation">]</span> <span class="token keyword">END</span>
如果expr的值等于val1，返回res1，<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 否则返回<span class="token keyword">default</span>默认值

<span class="token comment">#eg:</span>
<span class="token keyword">select</span> 
	name<span class="token punctuation">,</span>
	<span class="token punctuation">(</span> <span class="token keyword">case</span> workaddress
     	<span class="token keyword">when</span> <span class="token string">&#39;北京&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;一线城市&#39;</span> 
     	<span class="token keyword">when</span> <span class="token string">&#39;上海&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;一线城市&#39;</span> 
     	<span class="token keyword">else</span><span class="token string">&#39;二线城市&#39;</span> <span class="token keyword">end</span> <span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&#39;工作地址&#39;</span> 
<span class="token keyword">from</span> emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04-约束" tabindex="-1"><a class="header-anchor" href="#_04-约束" aria-hidden="true">#</a> 04 约束</h2><h3 id="_1-分类" tabindex="-1"><a class="header-anchor" href="#_1-分类" aria-hidden="true">#</a> （1）分类</h3><table><thead><tr><th>约束</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>PRIMARY KEY</td></tr><tr><td>默认约束</td><td>DEFAULT</td></tr><tr><td>检查约束（保证字段满足某个条件）</td><td>CHECK</td></tr><tr><td>外键约束（用于两表连接，保证两表数据一致，不推荐使用）</td><td>FOREIGN KEY</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 注意：约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_user<span class="token punctuation">(</span>
id <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;ID唯一标识&#39;</span><span class="token punctuation">,</span>
name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span> <span class="token punctuation">,</span>
age <span class="token keyword">int</span> <span class="token keyword">check</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> age <span class="token operator">&lt;=</span> <span class="token number">120</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span> <span class="token punctuation">,</span>
<span class="token keyword">status</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;状态&#39;</span><span class="token punctuation">,</span>
gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-外键约束" tabindex="-1"><a class="header-anchor" href="#_2-外键约束" aria-hidden="true">#</a> （2）外键约束</h3><ul><li>添加外键</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>
	字段名 数据类型<span class="token punctuation">,</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>外键名称<span class="token punctuation">]</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>外键字段名<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表 <span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> 外键名称 <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>外键字段名<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表 <span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token comment">#eg:</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">add</span> <span class="token keyword">constraint</span> fk_emp_dept_id <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">references</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除外键</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> 外键名称<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_05-多表查询" tabindex="-1"><a class="header-anchor" href="#_05-多表查询" aria-hidden="true">#</a> 05 多表查询</h2><h3 id="_1-多表关系" tabindex="-1"><a class="header-anchor" href="#_1-多表关系" aria-hidden="true">#</a> （1）多表关系</h3><ul><li>一对一（如用户和用户详情表）</li><li>一对多（如一个员工是一个部门的，一个部门有多个员工）</li><li>多个多（如一个学生可选多门课，一门课有多个学生选，两表间可创中间表（学生选课表））</li></ul><h3 id="_2-连接查询" tabindex="-1"><a class="header-anchor" href="#_2-连接查询" aria-hidden="true">#</a> （2）连接查询</h3><blockquote><p>例如：select * from emp , dept ;</p><p>emp表中有20条数据，dept中有5条数据，查出结果为100条---笛卡尔积。</p></blockquote><h4 id="【1】内连接" tabindex="-1"><a class="header-anchor" href="#【1】内连接" aria-hidden="true">#</a> 【1】内连接</h4><ul><li>查询A、B两表交集部分数据</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">,</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span> <span class="token keyword">INNER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>

<span class="token comment"># eg：</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span>name<span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token comment">/*
	注意：别名：emp e 或 emp as e，字段必须用e.xx，from在select前执行
	同名属性必须指定表名
*/</span>
<span class="token comment"># 查询所有员工的工资等级</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token punctuation">,</span> s<span class="token punctuation">.</span>grade <span class="token punctuation">,</span> s<span class="token punctuation">.</span>losal<span class="token punctuation">,</span> s<span class="token punctuation">.</span>hisal <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> salgrade s <span class="token keyword">where</span> e<span class="token punctuation">.</span>salary <span class="token operator">&gt;=</span> s<span class="token punctuation">.</span>losal <span class="token operator">and</span> e<span class="token punctuation">.</span>salary <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>hisal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【2】左外连接" tabindex="-1"><a class="header-anchor" href="#【2】左外连接" aria-hidden="true">#</a> 【2】左外连接</h4><ul><li>查询左表的所有数据，当然也包含表1和表2交集部分的数据（左表未匹配数据+内连接数据）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token punctuation">[</span> <span class="token keyword">OUTER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>

<span class="token comment"># eg: 查询拥有员工的部门ID、部门名称（去重）</span>
<span class="token keyword">select</span> <span class="token keyword">distinct</span> d<span class="token punctuation">.</span>id <span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp e <span class="token punctuation">,</span> dept d <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【3】右外连接" tabindex="-1"><a class="header-anchor" href="#【3】右外连接" aria-hidden="true">#</a> 【3】右外连接</h4><ul><li>查询右表的所有数据，当然也包含表1和表2交集部分的数据（右表未匹配数据+内连接数据）</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span> <span class="token keyword">OUTER</span> <span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="【4】自连接" tabindex="-1"><a class="header-anchor" href="#【4】自连接" aria-hidden="true">#</a> 【4】自连接</h4><h5 id="_1-自连接查询" tabindex="-1"><a class="header-anchor" href="#_1-自连接查询" aria-hidden="true">#</a> 1）自连接查询</h5><ul><li>自己连自己查询，可内连接、外连接</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表A 别名A <span class="token keyword">JOIN</span> 表A 别名B <span class="token keyword">ON</span> 条件 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">;</span>
<span class="token comment">#eg:查询员工 及其 所属领导的名字（内连接）</span>
 <span class="token keyword">select</span> a<span class="token punctuation">.</span>name <span class="token punctuation">,</span> b<span class="token punctuation">.</span>name <span class="token keyword">from</span> emp a <span class="token punctuation">,</span> emp b <span class="token keyword">where</span> a<span class="token punctuation">.</span>managerid <span class="token operator">=</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-联合查询" tabindex="-1"><a class="header-anchor" href="#_2-联合查询" aria-hidden="true">#</a> 2）联合查询</h5><ul><li>把多次查询的结果合并起来，形成一个新的查询结果集（联合查询的字段必须一致） <ul><li>union：合并之后的数据去重</li><li>union all：全部的数据直接合并在一起</li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表<span class="token number">1</span> <span class="token keyword">FROM</span> 表A <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">UNION</span> <span class="token punctuation">[</span> <span class="token keyword">ALL</span> <span class="token punctuation">]</span>
<span class="token keyword">SELECT</span> 字段列表<span class="token number">2</span> <span class="token keyword">FROM</span> 表B <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token comment"># 字段列表1和字段列表2一致</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-子查询" tabindex="-1"><a class="header-anchor" href="#_2-子查询" aria-hidden="true">#</a> （2）子查询</h3><ul><li><p>嵌套查询，嵌套另一个SQL语句。</p></li><li><p>子查询外部的语句可以是INSERT / UPDATE / DELETE / SELECT 的任何一个。</p></li><li><p>先写嵌套内的SQL，再根据SQL的结果写外部的SQL，分解再组合写。</p></li></ul><h4 id="【1】分类" tabindex="-1"><a class="header-anchor" href="#【1】分类" aria-hidden="true">#</a> 【1】分类</h4><ul><li><p>查询结果</p><ul><li><p>标量子查询（子查询结果为单个值）</p></li><li><p>列子查询(子查询结果为一列)</p></li><li><p>行子查询(子查询结果为一行</p></li><li><p>表子查询(子查询结果为多行多列)</p></li></ul></li><li><p>子查询位置</p><ul><li>WHERE</li><li>FROM</li><li>SELECT</li></ul></li></ul><h4 id="【2】标量子查询" tabindex="-1"><a class="header-anchor" href="#【2】标量子查询" aria-hidden="true">#</a> 【2】标量子查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 嵌套的SQL返回值是单个值 = &lt;&gt; &gt; &gt;= &lt; &lt;= </span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;销售部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 查询所有的部门信息, 并统计部门的员工人数</span>
<span class="token keyword">select</span> d<span class="token punctuation">.</span>id<span class="token punctuation">,</span> d<span class="token punctuation">.</span>name <span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp e <span class="token keyword">where</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token punctuation">)</span> <span class="token string">&#39;人数&#39;</span> <span class="token keyword">from</span> dept d<span class="token punctuation">;</span>
 <span class="token comment"># 查询低于本部门平均工资的员工信息</span>
 <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp e2 <span class="token keyword">where</span> e2<span class="token punctuation">.</span>salary <span class="token operator">&lt;</span> <span class="token punctuation">(</span> 
     <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>e1<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> emp e1 <span class="token keyword">where</span> e1<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> e2<span class="token punctuation">.</span>dept_id
 <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【3】列子查询" tabindex="-1"><a class="header-anchor" href="#【3】列子查询" aria-hidden="true">#</a> 【3】列子查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 返回结果为一列，与IN 、NOT IN 、 ANY （满足一条即可）、SOME（同ANY） 、 ALL（全部满足）使用</span>
<span class="token comment"># eg：</span>
<span class="token comment"># 查询比财务部 所有人工资都高的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token keyword">all</span> <span class="token punctuation">(</span> 
    <span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询比研发部其中任意一人工资高的员工信息</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token keyword">any</span> <span class="token punctuation">(</span> 
    <span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> dept_id <span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> id <span class="token keyword">from</span> dept <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【4】行子查询" tabindex="-1"><a class="header-anchor" href="#【4】行子查询" aria-hidden="true">#</a> 【4】行子查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 子查询返回的结果是一行，= 、&lt;&gt; 、IN 、NOT IN</span>
<span class="token comment"># eg:</span>
<span class="token comment">#  查询与 &quot;张三&quot; 的薪资及直属领导相同的员工信息：</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> <span class="token punctuation">(</span>salary<span class="token punctuation">,</span>managerid<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
	<span class="token keyword">select</span> salary<span class="token punctuation">,</span> managerid <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【5】表子查询" tabindex="-1"><a class="header-anchor" href="#【5】表子查询" aria-hidden="true">#</a> 【5】表子查询</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询结果为多行多列，IN</span>
<span class="token comment"># 查询与 &quot;张三&quot; , &quot;李四&quot; 的职位和薪资相同的员工信息</span>
seletct <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> <span class="token punctuation">(</span>job<span class="token punctuation">,</span>salary<span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token punctuation">(</span>
    <span class="token keyword">select</span> job<span class="token punctuation">,</span>salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 查询入职日期是 &quot;2006-01-01&quot; 之后的员工信息 , 及其部门信息</span>
<span class="token comment">/*
	第一步：查询员工信息，select * from emp where  entrydate &gt; &#39;2006-01-01&#39;;
	第二步：查询员工信息与部分信息：select e.*,d.* from emp1 e left join dept d on e.dept_id = d.id ;
	第三步：第二步的emp1即第一步的结果，可结合
*/</span>
<span class="token keyword">select</span> e<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>d<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span>
    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span>  entrydate <span class="token operator">&gt;</span> <span class="token string">&#39;2006-01-01&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">)</span> e <span class="token keyword">left</span> <span class="token keyword">join</span> dept d <span class="token keyword">on</span> e<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_06-事务" tabindex="-1"><a class="header-anchor" href="#_06-事务" aria-hidden="true">#</a> 06 事务</h2><h3 id="_1-事务概念" tabindex="-1"><a class="header-anchor" href="#_1-事务概念" aria-hidden="true">#</a> （1）事务概念</h3><ul><li>一组操作的集合，不可分割，要么成功要么失败。（提交与回滚）</li><li>MYSQL默认的事务是自动提交。执行DML语句会隐式提交事务。</li></ul><h3 id="_2-事务操作" tabindex="-1"><a class="header-anchor" href="#_2-事务操作" aria-hidden="true">#</a> （2）事务操作</h3><ul><li>关闭自动事务的方式：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 1. 查看设置事务提交方式（默认为1）</span>
<span class="token keyword">SELECT</span> @<span class="token variable">@AUTOCOMMIT</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> @<span class="token variable">@AUTOCOMMIT</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">#设置手动提交</span>
<span class="token comment"># DML语句只是临时修改表中数据，没有COMMIT就没有提交到数据库。</span>

<span class="token comment"># 2. 提交事务（正常执行）</span>
<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>

<span class="token comment"># 3. 回滚事务（异常执行）</span>
<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不关闭自动事务的方式：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 1. 开启事务 </span>
<span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span> 或 <span class="token keyword">BEGIN</span><span class="token punctuation">;</span>
<span class="token comment"># 2.  提交事务 </span>
<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>
<span class="token comment"># 3.  回滚事务 </span>
<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-事物四大特性-acid" tabindex="-1"><a class="header-anchor" href="#_3-事物四大特性-acid" aria-hidden="true">#</a> （3）事物四大特性（ACID）</h3><ul><li>原子性：事务是不可分割的最小操作单元，要么全部成功要么全部失败；</li><li>一致性：事务完成时所有数据保持一致状态；（如转账后钱的总额不变）</li><li>隔离性：数据库隔离机制，保证事务在不受外部并发影响的独立环境下运行；</li><li>持久化：数据一旦提交或回滚，对数据库的数据的改变是永久的，持久化到数据库。</li></ul><h3 id="_4-并发事务问题" tabindex="-1"><a class="header-anchor" href="#_4-并发事务问题" aria-hidden="true">#</a> （4）并发事务问题</h3><ul><li>脏读：一个事务读取到另一个事务没提交的数据。</li><li>不可重复读：一个事务中先后读取同一条记录，两次读取的数据不同。 <ul><li>例：t1第一次读取a = 10，t2将a进行改值a=20，然后t1再次读取a，读的是20，两次读取数据不同；</li></ul></li><li>幻读：一个事务按照条件查询数据时，没对应行，但是插入时又发现有这行。</li></ul><h3 id="_5-事务隔离级别" tabindex="-1"><a class="header-anchor" href="#_5-事务隔离级别" aria-hidden="true">#</a> （5）事务隔离级别</h3><table><thead><tr><th style="text-align:center;">事务隔离级别</th><th style="text-align:center;">脏读</th><th style="text-align:center;">不可重复读</th><th style="text-align:center;">幻读</th></tr></thead><tbody><tr><td style="text-align:center;">READ UNCOMMITTED</td><td style="text-align:center;">×</td><td style="text-align:center;">×</td><td style="text-align:center;">×</td></tr><tr><td style="text-align:center;">READ COMMITTED</td><td style="text-align:center;">√</td><td style="text-align:center;">×</td><td style="text-align:center;">×</td></tr><tr><td style="text-align:center;">REPEATABLE</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">×</td></tr><tr><td style="text-align:center;">SERIALIZABLE</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td></tr></tbody></table><ul><li><p>SERIALIZABLE能解决脏读、不可重复读、幻读的问题，但性能最低，它的执行结果能与t1、t2顺序（串行）执行的结果一致；</p><ul><li>例：事务1开启了可串行化隔离级别，然后开始对表1添加数据，事务2开始对表1插入数据会等到事务1添加结束才执行。</li></ul></li><li><p>默认事务隔离级别：REPEATABLE，可重复读；</p></li><li><p>查看事务隔离级别：</p><ul><li><code>SELECT @@TRANSACTION_ISOLATION;</code></li></ul></li><li><p>设置事务隔离级别 :（当前会话还是全局）</p><ul><li><code>SET [SESSION |GLOBAL] TRANSACTION ISOLATION LEVEL { 事务隔离级别 };</code></li></ul></li><li><p>事务隔离级别越高，数据越安全，但是性能越低。</p></li></ul>`,168),l=[t];function o(c,i){return s(),a("div",null,l)}const u=n(p,[["render",o],["__file","1.html.vue"]]);export{u as default};
