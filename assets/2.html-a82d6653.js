import{_ as a,V as s,W as n,$ as t}from"./framework-b9c3f338.js";const e={},p=t(`<h1 id="_2-mybatis相关文件" tabindex="-1"><a class="header-anchor" href="#_2-mybatis相关文件" aria-hidden="true">#</a> 2. Mybatis相关文件</h1><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><ul><li>主要配置数据源、数据管理、映射器等基本属性。</li></ul><h2 id="映射文件" tabindex="-1"><a class="header-anchor" href="#映射文件" aria-hidden="true">#</a> 映射文件</h2><ul><li><p><strong>namespace</strong>：命名空间，对应于Mapper接口的全限名；</p></li><li><p><strong>parameterType</strong>：定义输入到sql语句中的映射类型，#{id}表示使用占位符将变量id传到sql；</p></li><li><p><strong>insert/delete/update/select</strong>：表明该条SQL语句是增加/删除/修改查询语句；</p></li><li><p><strong>id</strong>：对应于mapper类中的方法名；</p></li><li><p><strong>resultType</strong>：定义结果映射类型，将SQL查询数据映射到该指定的类型对象中。</p></li><li><p>映射文件中每条Sql语句即一个statement。</p></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.study.content.mapper.CourseCategoryMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectTreeNodes<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>string<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.study.content.model.dto.CourseCategoryTreeDto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        WITH RECURSIVE res AS (
            SELECT * FROM course_category t1 WHERE id = #{id}
            UNION ALL
            SELECT t2.* FROM course_category t2 INNER JOIN res ON res.id = t2.parent_id
        )
        SELECT * FROM res ORDER BY res.id;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),l=[p];function o(c,i){return s(),n("div",null,l)}const u=a(e,[["render",o],["__file","2.html.vue"]]);export{u as default};
