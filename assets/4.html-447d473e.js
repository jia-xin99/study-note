import{_ as i,V as a,W as l,$ as e}from"./framework-b9c3f338.js";const t={},r=e('<h1 id="_04-本地方法栈" tabindex="-1"><a class="header-anchor" href="#_04-本地方法栈" aria-hidden="true">#</a> 04 本地方法栈</h1><h2 id="本地方法" tabindex="-1"><a class="header-anchor" href="#本地方法" aria-hidden="true">#</a> 本地方法</h2><ul><li>一个Native方法即一个Java调用非Java代码的接口。</li><li>定义本地方法不需要实现体，实现体由非java语言（如C++）在外实现。</li><li>native可与所有其他java标识符连用，abstract除外。</li><li>作用：与Java环境外交互，与OS交互等，Sun解释器用C实现。</li></ul><h2 id="本地方法栈" tabindex="-1"><a class="header-anchor" href="#本地方法栈" aria-hidden="true">#</a> 本地方法栈</h2><ul><li>虚拟机栈管理java方法的调用，本地方法栈管理本地方法的调用。</li><li>线程私有。</li><li>异常情况同虚拟机栈。</li><li>本地方法用C实现。</li><li>做法：本地方法栈中登记native方法，执行引擎执行时加载本地方法库。</li><li>当线程调用一个本地方法时，其不受JVM限制。其和虚拟机有同样的权限。 <ul><li>本地方法可通过本地方法接口访问虚拟机内部的运行时数据区。</li><li>可直接使用本地处理器的寄存器</li><li>直接从本地堆中分配任意数量的内存</li></ul></li><li>并不是所有JVM支持本地方法。</li><li>hotspot JVM中，本地方法栈和虚拟机方法栈合二为一。</li></ul>',5),n=[r];function h(c,d){return a(),l("div",null,n)}const o=i(t,[["render",h],["__file","4.html.vue"]]);export{o as default};
