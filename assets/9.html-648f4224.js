import{_ as n,V as a,W as s,$ as p}from"./framework-b9c3f338.js";const t={},e=p(`<h1 id="_9-park-unpark" tabindex="-1"><a class="header-anchor" href="#_9-park-unpark" aria-hidden="true">#</a> 9. park/unpark</h1><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><ul><li>是LockSupport类的方法；</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 暂停线程</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 恢复某个线程的运行</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>线程对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>先park后unpark：线程A先park，然后线程B使用unpark(A)恢复线程A；</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 暂停线程</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;已恢复&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 恢复某线程</span>
    <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>测试先unpark后park，仍能正常执行，不会暂停</summary><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 暂停线程</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;已恢复&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 恢复某线程</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>结论：unpark可以在park之前或之后调用。</li></ul><h2 id="对比object的wait-notify" tabindex="-1"><a class="header-anchor" href="#对比object的wait-notify" aria-hidden="true">#</a> 对比Object的wait/notify</h2><ul><li>wait、notify、notifyAll必须配合Object Monitor一起使用，而unpark/park不需要；</li><li>park&amp;unpark以线程为单位来阻塞和唤醒线程， notify只能随机唤醒一个等待线程，notifyAll是唤醒所有线程，但不能保证精确唤醒；</li><li>park&amp;unpark可以先unpark，而wait&amp;notify必须先wait再notify。</li></ul><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><ul><li>调用park与unpark方法实际是调用Unsafe类的park与unpark方法，其操作一个park0对象；</li><li>每个线程有一个Parker对象，由三部分组成， _counter, _cond, 和 _mutex。</li></ul><h3 id="【1】park" tabindex="-1"><a class="header-anchor" href="#【1】park" aria-hidden="true">#</a> 【1】park</h3><ul><li><p>当前线程调用Unsafe.park( )方法；</p></li><li><p>检查<code>_counter</code>，（若先unpark，此时<code>_counter=1</code>）</p><ul><li>若为0，则获得<code>_mutex</code>互斥锁，线程进入<code>_cond</code>条件变量阻塞；</li><li>若为1，此时线程无需阻塞，继续执行；【对应先unpark后park】</li></ul></li><li><p>设置<code>_counter=0</code>；</p></li></ul><h3 id="【2】先park后unpark" tabindex="-1"><a class="header-anchor" href="#【2】先park后unpark" aria-hidden="true">#</a> 【2】先park后unpark</h3><ul><li><p>当前线程调用Unsafe.park( )方法，检查<code>_counter</code>，<code>_counter=0</code>，阻塞；</p></li><li><p>其他线程调用Unsafe.unpark(Thread_0)，设置Thread_0的<code>_counter</code>为1；</p></li><li><p>唤醒<code>_cond</code>条件变量中的Thread_0，Thread_0恢复运行；</p></li><li><p>Thread_0设置<code>_counter=0</code>。</p></li></ul><h3 id="【3】先unpark后park" tabindex="-1"><a class="header-anchor" href="#【3】先unpark后park" aria-hidden="true">#</a> 【3】先unpark后park</h3><ul><li>其他线程调用Unsafe.unpark(Thread_0)，设置Thread_0的<code>_counter</code>为1；</li><li>Thread_0调用Unsafe.park( )方法；</li><li>Thread_0检查<code>_counter</code>，<code>_counter=1</code>，继续执行；</li><li>Thread_0设置<code>_counter=0</code>。</li></ul>`,18),c=[e];function o(l,i){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","9.html.vue"]]);export{r as default};
